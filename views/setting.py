# -*- coding: utf-8 -*-from flask import Blueprint, render_template, requestfrom application import db, appimport json, os, re, datetimefrom models.profile import Profilefrom views.log import addlogprofile = Blueprint('profile', __name__)@profile.route("/")def index():    info=Profile.query.filter(Profile.id==1).first()    return render_template("setting/index.html",info=info)@profile.route("/modify", methods=['GET', 'POST'])def modify():    code=0    msg="全局设置成功"    path=request.form['path'].strip()    ftphost=request.form['ftphost'].strip()    ftpuser=request.form['ftpuser'].strip()    ftppass=request.form['ftppass'].strip()    ftppath=request.form['ftppath'].strip()    if len(path)<1:        code=1        msg="请输入全局本地存储路径"        return responsejson(code,msg)    else:        if not os.path.exists(path):           code=1           msg="全局本地存储路径必须已经存在,如果不存在请新建"           return responsejson(code,msg)    if len(ftphost)<1 or len(ftphost)>50:        code=1        msg="请输入全局FTP主机"        return responsejson(code,msg)    if len(ftpuser)<1 or len(ftpuser)>50:        code=1        msg="请输入全局FTP用户名"        return responsejson(code,msg)    if len(ftppass)<1 or len(ftppass)>50:        code=1        msg="请输入全局FTP密码"        return responsejson(code,msg)    if len(ftppath)<1 or len(ftppath)>50:        code=1        msg="请输入全局FTP根路径"        return responsejson(code,msg)    info=Profile.query.filter(Profile.id==1).first()    if info:        logcontent=""        if info.path != path:            logcontent=logcontent+"path:%s->%s"%(info.path,path)            info.path = path        if info.ftphost != ftphost:            logcontent=logcontent+"ftphost:%s->%s"%(info.ftphost,ftphost)            info.ftphost = ftphost        if info.ftpuser != ftpuser:            logcontent=logcontent+"ftpuser:%s->%s"%(info.ftpuser,ftpuser)            info.ftpuser = ftpuser        if info.ftppass != ftppass:            logcontent=logcontent+"ftppass:%s->%s"%(info.ftppass,ftppass)            info.ftppass = ftppass        if info.ftppath != ftppath:            logcontent=logcontent+"ftppath:%s->%s"%(info.path,ftppath)            info.ftppath = ftppath        if logcontent:            logcontent="修改全局信息:%s"%logcontent            info.updated=datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")            db.session.commit()            addlog(logcontent)    else:        target=Profile(path, ftphost, ftpuser, ftppass, ftppath)        db.session.add(target)        db.session.commit()        if target.id:            logcontent="设置全局信息:path:%s,ftphost:%s,ftpuser:%s,ftppass:%s,ftppath:%s"%(path,ftphost,ftpuser,ftppass,ftppath)            addlog(logcontent)    return responsejson(code,msg)def responsejson(code,msg):    return app.response_class(json.dumps({'code':code,'msg':msg}), mimetype='application/json')